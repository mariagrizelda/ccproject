apiVersion: v1
kind: Service
metadata:
  name: courses-service
  namespace: ccproject
  labels:
    app: courses-svc
spec:
  selector:
    app: courses-svc
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: courses-svc
  namespace: ccproject
  labels:
    app: courses-svc
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: courses-svc
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: courses-svc
        version: v1
    spec:
      initContainers:
        - name: wait-for-mysql
          image: busybox:1.35
          command:
            [
              "sh",
              "-c",
              "until nc -z mysql-service 3306; do echo waiting for mysql; sleep 2; done;",
            ]
        - name: wait-for-auth
          image: busybox:1.35
          command:
            [
              "sh",
              "-c",
              "until nc -z auth-service 8001; do echo waiting for auth; sleep 2; done;",
            ]
      containers:
        - name: courses-svc
          image: gcr.io/model-obelisk-469607-r0/ccproject-backend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8002
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: DEBUG
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: ccproject-secrets
                  key: SECRET_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: ccproject-secrets
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ccproject-secrets
                  key: DB_PASSWORD
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: ALLOWED_HOSTS
            - name: CORS_ALLOWED_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: ccproject-config
                  key: CORS_ALLOWED_ORIGINS
            - name: DJANGO_SETTINGS_MODULE
              value: "backend.settings_courses"
          command: ["/bin/sh", "-c"]
          args:
            - |
              python manage.py migrate --noinput &&
              python manage.py insert_data &&
              gunicorn backend.wsgi:application --bind 0.0.0.0:8002 --workers 3 --timeout 120
          livenessProbe:
             httpGet:
               path: /api/courses/health/
               port: 8002
             initialDelaySeconds: 30
             periodSeconds: 10
             timeoutSeconds: 5
             failureThreshold: 3
          readinessProbe:
             httpGet:
               path: /api/courses/health/
               port: 8002
             initialDelaySeconds: 10
             periodSeconds: 5
             timeoutSeconds: 3
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "512Mi"
              cpu: "500m"
